#include "BasisSet.h"
#include <sstream>
#include <iomanip>
#include <cmath>
#include <cstdlib>

using namespace std;

// This writes the header for the MKL file
// Pretty self-explanatory
void WriteHeader ( ofstream & outFile )
{
  outFile << "$MKL" << endl;
  outFile << "#" << endl;
  outFile << "# MKL format from an NBO Plot File" << endl;
  outFile << "#" << endl;
}



/*
This is the main routine.
This program is used to take plot files
generated by GENNBO (or an NBO interface
in common ESS packages) and create an MKL
file that can be used by ORCA's
orca_2mkl routine to generate a corresponding
gbw file that can be used as a guess for
for a quantum calculation.

In particular, this program was written to
utilize NBOs and NLMOs as guess orbitals
for CASSCF calculations.

Building: This was successfully built with gcc 7.4.0
  - Please feel free to try other versions!

Calling:
nbo2mkl BASE EXT charge multiplicity
  - Here BASE is the base of the relevant files.
  - It is required that there be the following present:
    1. BASE.31
    2. BASE.EXT
    3. BASE.47
  - EXT is the extension of the relevant orbital file.
    - By default, GENNBO uses 37 for NBO and 39
      for NLMOs
  - the BASE.47 file is the archive file that was either
    used with GENNBO to generate the plot files or almost
    all ESS packages have an option to save the archive
    file
  - charge is the charge of the system
  - multiplicity is the multiplicity

Currently, the MKL file ONLY  contains the coordinates,
charge, multiplicity, basis set, and MO coefficients.

Further, it doesn't generate beta MO coefficients.

Also, it doesn't include symmetry labels or orbital
energies

The inclusion of the above along with occupancies is planned
for future development.
*/



int main ( int argc, char* argv[] )
{
  if ( argc != 5 )
  {
    cout << "Incorrect argument #!!!\nExiting..." << endl;
    exit(1);
  }
  BasisSet basis;
  vector<Atom> & geom;
  string ofile(argv[1]);
  ofile = ofile + ".mkl";
  ofstream outFile(ofile.c_str());
  WriteHeader(outFile);
  WriteChargeMult(outFile,argv[2],argv[3]);
  ReadWriteGeom(argv[1],outFile,geom);
  ReadWriteBasis(argv[1],outFile,geom,basis);
  ReadWriteOrbitals(argv[1],outFile,geom,basis);
}
